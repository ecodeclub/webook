// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package company

import (
	"sync"

	"github.com/ecodeclub/webook/internal/company/internal/repository"
	"github.com/ecodeclub/webook/internal/company/internal/repository/dao"
	"github.com/ecodeclub/webook/internal/company/internal/service"
	"github.com/ecodeclub/webook/internal/company/internal/web"
	"github.com/ego-component/egorm"
	"github.com/google/wire"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitModule(db *gorm.DB) (*Module, error) {
	companyService := InitService(db)
	companyHandler := web.NewCompanyHandler(companyService)
	handler := web.NewHandler(companyService)
	module := &Module{
		AdminHdl: companyHandler,
		Hdl:      handler,
		Svc:      companyService,
	}
	return module, nil
}

func InitService(db *gorm.DB) service.CompanyService {
	companyDAO := InitTablesOnce(db)
	companyRepository := repository.NewCompanyRepository(companyDAO)
	companyService := service.NewCompanyService(companyRepository)
	return companyService
}

// wire.go:

var HandlerSet = wire.NewSet(
	InitService, web.NewCompanyHandler, web.NewHandler,
)

var once = &sync.Once{}

func InitTablesOnce(db *egorm.Component) dao.CompanyDAO {
	once.Do(func() {
		_ = dao.InitTables(db)
	})
	return dao.NewGORMCompanyDAO(db)
}
