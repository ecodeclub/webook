// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package startup

import (
	"github.com/ecodeclub/webook/internal/interview/internal/repository"
	"github.com/ecodeclub/webook/internal/interview/internal/repository/dao"
	"github.com/ecodeclub/webook/internal/interview/internal/service"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitModule(db *gorm.DB) *Module {
	interviewJourneyDAO := dao.NewGORMInterviewJourneyDAO(db)
	interviewRoundDAO := dao.NewGORMInterviewRoundDAO(db)
	interviewRoundRepository := repository.NewInterviewRoundRepository(interviewRoundDAO)
	interviewJourneyRepository := repository.NewInterviewJourneyRepository(interviewJourneyDAO, interviewRoundRepository)
	interviewRoundService := service.NewInterviewRoundService(interviewJourneyRepository, interviewRoundRepository)
	interviewJourneyService := service.NewInterviewJourneyService(interviewJourneyRepository)
	module := &Module{
		RoundSvc:   interviewRoundService,
		JourneySvc: interviewJourneyService,
	}
	return module
}

// wire.go:

type Module struct {
	RoundSvc   service.InterviewRoundService
	JourneySvc service.InterviewJourneyService
}
