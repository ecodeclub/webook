// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package startup

import (
	"sync"

	"github.com/ecodeclub/webook/internal/ai"
	"github.com/ecodeclub/webook/internal/ai/internal/repository"
	"github.com/ecodeclub/webook/internal/ai/internal/repository/dao"
	"github.com/ecodeclub/webook/internal/ai/internal/service"
	"github.com/ecodeclub/webook/internal/ai/internal/service/llm"
	"github.com/ecodeclub/webook/internal/ai/internal/service/llm/handler"
	"github.com/ecodeclub/webook/internal/ai/internal/service/llm/handler/config"
	credit2 "github.com/ecodeclub/webook/internal/ai/internal/service/llm/handler/credit"
	"github.com/ecodeclub/webook/internal/ai/internal/service/llm/handler/log"
	hdlmocks "github.com/ecodeclub/webook/internal/ai/internal/service/llm/handler/mocks"
	"github.com/ecodeclub/webook/internal/ai/internal/service/llm/handler/record"
	"github.com/ecodeclub/webook/internal/ai/internal/web"
	"github.com/ecodeclub/webook/internal/credit"
	"github.com/ego-component/egorm"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitModule(db *gorm.DB, hdl *hdlmocks.MockHandler, creditSvc *credit.Module) (*ai.Module, error) {
	handlerBuilder := log.NewHandler()
	configDAO := dao.NewGORMConfigDAO(db)
	configRepository := repository.NewCachedConfigRepository(configDAO)
	configHandlerBuilder := config.NewBuilder(configRepository)
	serviceService := creditSvc.Svc
	llmCreditDAO := InitLLMCreditLogDAO(db)
	llmCreditLogRepo := repository.NewLLMCreditLogRepo(llmCreditDAO)
	creditHandlerBuilder := credit2.NewHandlerBuilder(serviceService, llmCreditLogRepo)
	llmRecordDAO := dao.NewGORMLLMLogDAO(db)
	llmLogRepo := repository.NewLLMLogRepo(llmRecordDAO)
	recordHandlerBuilder := record.NewHandler(llmLogRepo)
	v := ai.InitCommonHandlers(handlerBuilder, configHandlerBuilder, creditHandlerBuilder, recordHandlerBuilder)
	handler := InitRootHandler(v, hdl)
	llmService := llm.NewLLMService(handler)
	generalService := service.NewGeneralService(llmService)
	jdService := service.NewJDService(llmService)
	webHandler := web.NewHandler(generalService, jdService)
	configService := service.NewConfigService(configRepository)
	adminHandler := web.NewAdminHandler(configService)
	module := &ai.Module{
		Svc:          llmService,
		Hdl:          webHandler,
		AdminHandler: adminHandler,
	}
	return module, nil
}

// wire.go:

func InitRootHandler(common []handler.Builder, hdl *hdlmocks.MockHandler) handler.Handler {
	return handler.NewCompositionHandler(common, hdl)
}

var daoOnce = sync.Once{}

func InitTableOnce(db *gorm.DB) {
	daoOnce.Do(func() {
		err := dao.InitTables(db)
		if err != nil {
			panic(err)
		}
	})
}

func InitLLMCreditLogDAO(db *egorm.Component) dao.LLMCreditDAO {
	InitTableOnce(db)
	return dao.NewLLMCreditLogDAO(db)
}
