// Code generated by MockGen. DO NOT EDIT.
// Source: internal/cases/internal/service/search_sync.go

package mocks

import (
	"reflect"

	"github.com/golang/mock/gomock"
)

// MockSearchSyncService is a mock of SearchSyncService interface.
type MockSearchSyncService struct {
	ctrl     *gomock.Controller
	recorder *MockSearchSyncServiceMockRecorder
}

// MockSearchSyncServiceMockRecorder is the mock recorder for MockSearchSyncService.
type MockSearchSyncServiceMockRecorder struct {
	mock *MockSearchSyncService
}

// NewMockSearchSyncService creates a new mock instance.
func NewMockSearchSyncService(ctrl *gomock.Controller) *MockSearchSyncService {
	mock := &MockSearchSyncService{ctrl: ctrl}
	mock.recorder = &MockSearchSyncServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSearchSyncService) EXPECT() *MockSearchSyncServiceMockRecorder {
	return m.recorder
}

// SyncAll mocks base method.
func (m *MockSearchSyncService) SyncAll() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SyncAll")
}

// SyncAll indicates an expected call of SyncAll.
func (mr *MockSearchSyncServiceMockRecorder) SyncAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SyncAll", reflect.TypeOf((*MockSearchSyncService)(nil).SyncAll))
}
