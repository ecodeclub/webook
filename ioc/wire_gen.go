// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package ioc

import (
	"github.com/ecodeclub/webook/internal/cases"
	"github.com/ecodeclub/webook/internal/cos"
	"github.com/ecodeclub/webook/internal/label"
	baguwen "github.com/ecodeclub/webook/internal/question"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitApp() (*App, error) {
	cmdable := InitRedis()
	provider := InitSession(cmdable)
	db := InitDB()
	cache := InitCache(cmdable)
	handler, err := baguwen.InitHandler(db, cache)
	if err != nil {
		return nil, err
	}
	questionSetHandler, err := baguwen.InitQuestionSetHandler(db, cache)
	if err != nil {
		return nil, err
	}
	webHandler := label.InitHandler(db)
	handler2 := InitUserHandler(db, cache)
	config := InitCosConfig()
	handler3 := cos.InitHandler(config)
	handler4, err := cases.InitHandler(db, cache)
	if err != nil {
		return nil, err
	}
	component := initGinxServer(provider, handler, questionSetHandler, webHandler, handler2, handler3, handler4)
	app := &App{
		Web: component,
	}
	return app, nil
}

// wire.go:

var BaseSet = wire.NewSet(InitDB, InitCache, InitRedis, InitCosConfig)
