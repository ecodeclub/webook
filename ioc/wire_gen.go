// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package ioc

import (
	"github.com/ecodeclub/webook/internal/ai"
	"github.com/ecodeclub/webook/internal/bff"
	"github.com/ecodeclub/webook/internal/cases"
	"github.com/ecodeclub/webook/internal/comment"
	"github.com/ecodeclub/webook/internal/company"
	"github.com/ecodeclub/webook/internal/cos"
	"github.com/ecodeclub/webook/internal/credit"
	"github.com/ecodeclub/webook/internal/feedback"
	"github.com/ecodeclub/webook/internal/interactive"
	"github.com/ecodeclub/webook/internal/interview"
	"github.com/ecodeclub/webook/internal/label"
	"github.com/ecodeclub/webook/internal/marketing"
	"github.com/ecodeclub/webook/internal/material"
	"github.com/ecodeclub/webook/internal/member"
	"github.com/ecodeclub/webook/internal/order"
	"github.com/ecodeclub/webook/internal/payment"
	"github.com/ecodeclub/webook/internal/permission"
	"github.com/ecodeclub/webook/internal/pkg/middleware"
	"github.com/ecodeclub/webook/internal/product"
	"github.com/ecodeclub/webook/internal/project"
	"github.com/ecodeclub/webook/internal/question"
	"github.com/ecodeclub/webook/internal/recon"
	"github.com/ecodeclub/webook/internal/resume"
	"github.com/ecodeclub/webook/internal/review"
	"github.com/ecodeclub/webook/internal/roadmap"
	"github.com/ecodeclub/webook/internal/search"
	"github.com/ecodeclub/webook/internal/skill"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitApp() (*App, error) {
	cmdable := InitRedis()
	provider := InitSession(cmdable)
	v := InitDB()
	mq := InitMQ()
	module, err := member.InitModule(v, mq)
	if err != nil {
		return nil, err
	}
	v2 := module.Svc
	checkMembershipMiddlewareBuilder := middleware.NewCheckMembershipMiddlewareBuilder(v2)
	localActiveLimit := initLocalActiveLimiterBuilder()
	permissionModule, err := permission.InitModule(v, mq)
	if err != nil {
		return nil, err
	}
	v3 := permissionModule.Svc
	checkPermissionMiddlewareBuilder := middleware.NewCheckPermissionMiddlewareBuilder(v3)
	interactiveModule, err := interactive.InitModule(v, mq)
	if err != nil {
		return nil, err
	}
	cache := InitCache(cmdable)
	creditModule, err := credit.InitModule(v, mq, cache)
	if err != nil {
		return nil, err
	}
	aiModule, err := ai.InitModule(v, creditModule, mq)
	if err != nil {
		return nil, err
	}
	baguwenModule, err := baguwen.InitModule(v, interactiveModule, cache, permissionModule, aiModule, module, provider, mq)
	if err != nil {
		return nil, err
	}
	v4 := baguwenModule.Hdl
	v5 := baguwenModule.ExamineHdl
	v6 := baguwenModule.QsHdl
	v7 := label.InitHandler(v)
	client := initAliSMSClient()
	userModule := InitUserModule(v, provider, cache, mq, module, client, permissionModule)
	v8 := userModule.Hdl
	config := InitCosConfig()
	v9 := cos.InitHandler(config)
	casesModule, err := cases.InitModule(v, interactiveModule, aiModule, module, provider, cache, mq)
	if err != nil {
		return nil, err
	}
	v10 := casesModule.Hdl
	v11, err := skill.InitHandler(v, cache, baguwenModule, casesModule, mq)
	if err != nil {
		return nil, err
	}
	v12, err := feedback.InitHandler(v, mq)
	if err != nil {
		return nil, err
	}
	productModule, err := product.InitModule(v, mq)
	if err != nil {
		return nil, err
	}
	v13 := productModule.Hdl
	paymentModule, err := payment.InitModule(v, mq, cache, userModule, creditModule)
	if err != nil {
		return nil, err
	}
	orderModule, err := order.InitModule(v, cache, mq, paymentModule, productModule, creditModule)
	if err != nil {
		return nil, err
	}
	v14 := orderModule.Hdl
	projectModule, err := project.InitModule(v, interactiveModule, permissionModule, mq, provider)
	if err != nil {
		return nil, err
	}
	v15 := projectModule.Hdl
	v16 := creditModule.Hdl
	v17 := paymentModule.Hdl
	marketingModule, err := marketing.InitModule(v, mq, cache, orderModule, productModule)
	if err != nil {
		return nil, err
	}
	v18 := marketingModule.Hdl
	v19 := interactiveModule.Hdl
	elasticClient := InitES()
	searchModule, err := search.InitModule(elasticClient, mq, casesModule)
	if err != nil {
		return nil, err
	}
	v20 := searchModule.Hdl
	roadmapModule := roadmap.InitModule(v, baguwenModule)
	v21 := roadmapModule.Hdl
	bffModule, err := bff.InitModule(interactiveModule, casesModule, baguwenModule)
	if err != nil {
		return nil, err
	}
	v22 := bffModule.Hdl
	v23 := casesModule.CsHdl
	v24 := casesModule.ExamineHdl
	resumeModule := resume.InitModule(v, casesModule, aiModule)
	v25 := resumeModule.PrjHdl
	v26 := resumeModule.AnalysisHandler
	v27 := aiModule.Hdl
	reviewModule := review.InitModule(v, interactiveModule, mq, provider, cache)
	v28 := reviewModule.Hdl
	commentModule, err := comment.InitModule(v, userModule)
	if err != nil {
		return nil, err
	}
	v29 := commentModule.Hdl
	materialModule, err := material.InitModule(v, mq, client, userModule)
	if err != nil {
		return nil, err
	}
	v30 := materialModule.Hdl
	interviewModule, err := interview.InitModule(v)
	if err != nil {
		return nil, err
	}
	v31 := interviewModule.JourneyHdl
	v32 := interviewModule.OfferHdl
	component := initGinxServer(provider, checkMembershipMiddlewareBuilder, localActiveLimit, checkPermissionMiddlewareBuilder, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32)
	v33 := projectModule.AdminHdl
	v34 := roadmapModule.AdminHdl
	v35 := baguwenModule.AdminHdl
	v36 := baguwenModule.AdminSetHdl
	v37 := casesModule.AdminHandler
	v38 := casesModule.AdminSetHandler
	v39 := marketingModule.AdminHdl
	v40 := aiModule.AdminHandler
	v41 := reviewModule.AdminHdl
	v42 := casesModule.KnowledgeBaseHandler
	v43 := baguwenModule.KnowledgeBaseHdl
	v44 := materialModule.AdminHdl
	companyModule, err := company.InitModule(v)
	if err != nil {
		return nil, err
	}
	v45 := companyModule.Hdl
	adminServer := InitAdminServer(v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45)
	v46 := orderModule.CloseTimeoutOrdersJob
	v47 := creditModule.CloseTimeoutLockedCreditsJob
	v48 := paymentModule.SyncWechatOrderJob
	reconModule, err := recon.InitModule(orderModule, paymentModule, creditModule)
	if err != nil {
		return nil, err
	}
	v49 := reconModule.SyncPaymentAndOrderJob
	v50 := initCronJobs(v46, v47, v48, v49)
	v51 := baguwenModule.KnowledgeJobStarter
	v52 := initJobs(v51)
	v53 := initMQConsumers(mq)
	app := &App{
		Web:       component,
		Admin:     adminServer,
		Crons:     v50,
		Jobs:      v52,
		Consumers: v53,
	}
	return app, nil
}

// wire.go:

var BaseSet = wire.NewSet(InitDB, InitCache, InitES, InitRedis, InitMQ, InitCosConfig)
